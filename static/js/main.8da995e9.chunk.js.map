{"version":3,"sources":["components/TabInfo/TabInfo.tsx","components/Tabs/Tabs.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["TabInfo","tab","isSelected","tabId","id","className","classNames","to","title","Tabs","tabs","useParams","selectedTab","find","content","ifTabIdIsWrong","undefined","map","Navigation","isActive","App","useState","allTabs","path","index","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8PASaA,EAA2B,SAAC,GAGlC,IAFLC,EAEI,EAFJA,IAGMC,EADF,EADJC,QAE6BF,EAAIG,GAEjC,OACE,mCACE,oBACE,UAAQ,MACRC,UAAWC,IAAW,CAAE,YAAaJ,IAFvC,SAIE,cAAC,IAAD,CACEK,GAAE,gBAAWN,EAAIG,IADnB,SAGGH,EAAIO,aChBFC,EAAwB,SAAC,GAE/B,IAAD,EADJC,EACI,EADJA,KAEA,EAAuBC,cAAfR,aAAR,MAAgB,GAAhB,EACMS,EAAW,UAAGF,EAAKG,MAAK,SAAAZ,GAAG,OAAIA,EAAIG,KAAOD,YAA/B,aAAG,EAAoCW,QAClDC,EAA2B,KAAVZ,QAAgCa,IAAhBJ,EAEvC,OACE,qCACE,oBAAIP,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKO,KAAI,SAAAhB,GAAG,OACX,cAAC,EAAD,CACEA,IAAKA,EAELE,MAAOA,GADFF,EAAIG,WAOjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGU,EACC,sBAEA,6CACMH,WCjCHM,EAAuB,WAClC,OACE,qBACEb,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHF,UAAW,gBAAGc,EAAH,EAAGA,SAAH,OAAkBb,IAC3B,cAAe,CAAE,YAAaa,KAHlC,kBAQA,cAAC,IAAD,CACEZ,GAAG,QACHF,UAAW,gBAAGc,EAAH,EAAGA,SAAH,OAAkBb,IAC3B,cAAe,CAAE,YAAaa,KAHlC,0BCTJT,EAAO,CACX,CAAEN,GAAI,QAASI,MAAO,QAASM,QAAS,eACxC,CAAEV,GAAI,QAASI,MAAO,QAASM,QAAS,eACxC,CAAEV,GAAI,QAASI,MAAO,QAASM,QAAS,gBAG7BM,EAAM,WACjB,MAAkBC,mBAASX,GAApBY,EAAP,oBAEA,OACE,qCACE,cAAC,EAAD,IAEA,qBAAKjB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOkB,KAAK,OAAZ,UACE,cAAC,IAAD,CACEC,OAAK,EACLC,QACE,cAAC,EAAD,CACEf,KAAMY,MAIZ,cAAC,IAAD,CACEC,KAAK,SACLE,QACE,cAAC,EAAD,CACEf,KAAMY,SAKd,cAAC,IAAD,CACEC,KAAK,IACLE,QAAS,oBAAIpB,UAAU,QAAd,8BAEX,cAAC,IAAD,CACEkB,KAAK,IACLE,QAAS,oBAAIpB,UAAU,QAAd,yBAEX,cAAC,IAAD,CACEkB,KAAK,OACLE,QAAS,cAAC,IAAD,CAAUlB,GAAG,IAAImB,SAAO,iBClD/CC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8da995e9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab\n  tabId: string\n};\n\nexport const TabInfo: React.FC<Props> = ({\n  tab,\n  tabId,\n}) => {\n  const isSelected = tabId === tab.id;\n\n  return (\n    <>\n      <li\n        data-cy=\"Tab\"\n        className={classNames({ 'is-active': isSelected })}\n      >\n        <Link\n          to={`/tabs/${tab.id}`}\n        >\n          {tab.title}\n        </Link>\n      </li>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\nimport { TabInfo } from '../TabInfo';\n\ntype Props = {\n  tabs: Tab[]\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n}) => {\n  const { tabId = '' } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId)?.content;\n  const ifTabIdIsWrong = tabId === '' || selectedTab === undefined;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabInfo\n              tab={tab}\n              key={tab.id}\n              tabId={tabId}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {ifTabIdIsWrong ? (\n          'Please select a tab'\n        ) : (\n          <>\n            {`${selectedTab}`}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'is-active': isActive },\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Tabs } from './components/Tabs';\nimport { Navigation } from './components/Navigation';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [allTabs] = useState(tabs);\n\n  return (\n    <>\n      <Navigation />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"tabs\">\n              <Route\n                index\n                element={(\n                  <Tabs\n                    tabs={allTabs}\n                  />\n                )}\n              />\n              <Route\n                path=\":tabId\"\n                element={(\n                  <Tabs\n                    tabs={allTabs}\n                  />\n                )}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}